// Generated by CoffeeScript 1.9.0
App.ImgurApiController = Ember.Controller.extend({
  get: function(id) {
    return $.ajax({
      url: 'https://api.imgur.com/3/gallery/image/' + id,
      headers: {
        Authorization: 'Client-ID b37988f15bb617f'
      }
    });
  }
});

App.WatchesController = Ember.ArrayController.extend({
  needs: ['imgurApi'],
  errMsg: null,
  val: null,
  reset: function() {
    return this.setProperties({
      errMsg: null,
      val: null
    });
  },
  _add: function(imgurObj) {
    var newWatch, now;
    console.log('_add', imgurObj);
    now = new Date();
    newWatch = this.store.createRecord('watch', {
      imgId: imgurObj.id,
      started: now,
      uploaded: new Date(imgurObj.datetime * 1000)
    });
    newWatch.save();
    return this.reset();
  },
  checkImgur: function(id) {
    console.log('checkImgur', id);
    return this.get('controllers.imgurApi').get(id).done((function(_this) {
      return function(response) {
        console.log('done', response);
        if (response.success) {
          return _this._add(response.data);
        }
      };
    })(this)).fail((function(_this) {
      return function(jqXHR, textStatus) {
        console.log('fail', jqXHR, textStatus);
        return _this.set('errMsg', 'Invalid ID');
      };
    })(this));
  },
  checkStore: function(id) {
    return this.store.find('watch', {
      img_id: id
    }).then((function(_this) {
      return function(records) {
        if (records.length) {
          return _this.set('errMsg', 'ID already exists');
        } else {
          return _this.checkImgur(id);
        }
      };
    })(this));
  },
  validate: function() {
    var id;
    id = this.get('val');
    if (!id || !id.length) {
      this.set('errMsg', 'Please enter a valid imgur ID');
      return false;
    }
    return this.checkStore(id);
  },
  actions: {
    add: function() {
      return console.log(this.validate());
    },
    showActivity: function(watch) {
      console.log('showActivity', watch);
      return this.transitionToRoute('activity', watch);
    },
    "delete": function(watch) {
      console.log('delete', watch);
      watch.deleteRecord();
      return watch.save();
    }
  }
});

App.ActivityController = Ember.Controller.extend({
  needs: ['activities']
});

App.ActivitiesView = Ember.View.extend({
  classNames: ['activities-view'],
  didInsertElement: function() {},
  initD3: function() {
    var data, dataStr, height, line, margin, parseDate, svg, width, x, xAxis, y, yAxis;
    margin = {
      top: 20,
      right: 20,
      bottom: 30,
      left: 50
    };
    width = 960 - margin.left - margin.right;
    height = 300 - margin.top - margin.bottom;
    parseDate = d3.time.format("%d-%b-%y").parse;
    x = d3.time.scale().range([0, width]);
    y = d3.scale.linear().range([height, 0]);
    xAxis = d3.svg.axis().scale(x).orient("bottom");
    yAxis = d3.svg.axis().scale(y).orient("left");
    line = d3.svg.line().x(function(d) {
      return x(d.datetime);
    }).y(function(d) {
      return y(d.views);
    });
    svg = d3.select(".activities-view").append("svg").attr("width", width + margin.left + margin.right).attr("height", height + margin.top + margin.bottom).append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    dataStr = "date,close\n1-May-12,582.13\n30-Apr-12,583.98\n27-Apr-12,603.00\n26-Apr-12,607.70\n25-Apr-12,610.00\n24-Apr-12,560.28";
    data = d3.csv.parse(dataStr, function(d) {
      return {
        date: parseDate(d.date),
        close: +d.close
      };
    });
    x.domain(d3.extent(data, function(d) {
      return d.date;
    }));
    y.domain(d3.extent(data, function(d) {
      return d.close;
    }));
    svg.append("g").attr("class", "x axis").attr("transform", "translate(0," + height + ")").call(xAxis);
    svg.append("g").attr("class", "y axis").call(yAxis).append("text").attr("transform", "rotate(-90)").attr("y", 6).attr("dy", ".71em").style("text-anchor", "end").text("Price ($)");
    return svg.append("path").datum(data).attr("class", "line").attr("d", line);
  }
});

App.ActivitiesController = Ember.ArrayController.extend({
  needs: ['activity'],
  model: Ember.computed.oneWay('controllers.activity.model.activities'),
  views: (function() {
    return this.mapBy('views');
  }).property('@each.views'),
  viewsDataStr: (function() {
    var dataStr;
    dataStr = 'datetime,views\n';
    this.forEach(function(item) {
      dataStr += (item.get('datetime')).toISOString() + ',' + (item.get('views')) + '\n';
      return null;
    });
    return dataStr;
  }).property('@each')
});
